// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/writerai/writer-client-sdk-go/pkg/models/shared"
	"net/http"
)

type ListTeamDocumentsSortField string

const (
	ListTeamDocumentsSortFieldTitle            ListTeamDocumentsSortField = "title"
	ListTeamDocumentsSortFieldCreationTime     ListTeamDocumentsSortField = "creationTime"
	ListTeamDocumentsSortFieldModificationTime ListTeamDocumentsSortField = "modificationTime"
	ListTeamDocumentsSortFieldModifiedByMeTime ListTeamDocumentsSortField = "modifiedByMeTime"
	ListTeamDocumentsSortFieldOpenedByMeTime   ListTeamDocumentsSortField = "openedByMeTime"
)

func (e ListTeamDocumentsSortField) ToPointer() *ListTeamDocumentsSortField {
	return &e
}

func (e *ListTeamDocumentsSortField) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "title":
		fallthrough
	case "creationTime":
		fallthrough
	case "modificationTime":
		fallthrough
	case "modifiedByMeTime":
		fallthrough
	case "openedByMeTime":
		*e = ListTeamDocumentsSortField(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTeamDocumentsSortField: %v", v)
	}
}

type ListTeamDocumentsSortOrder string

const (
	ListTeamDocumentsSortOrderAsc  ListTeamDocumentsSortOrder = "asc"
	ListTeamDocumentsSortOrderDesc ListTeamDocumentsSortOrder = "desc"
)

func (e ListTeamDocumentsSortOrder) ToPointer() *ListTeamDocumentsSortOrder {
	return &e
}

func (e *ListTeamDocumentsSortOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = ListTeamDocumentsSortOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTeamDocumentsSortOrder: %v", v)
	}
}

type ListTeamDocumentsRequest struct {
	Limit          *int                        `queryParam:"style=form,explode=true,name=limit"`
	Offset         *int64                      `queryParam:"style=form,explode=true,name=offset"`
	OrganizationID *int64                      `pathParam:"style=simple,explode=false,name=organizationId"`
	Search         *string                     `queryParam:"style=form,explode=true,name=search"`
	SortField      *ListTeamDocumentsSortField `queryParam:"style=form,explode=true,name=sortField"`
	SortOrder      *ListTeamDocumentsSortOrder `queryParam:"style=form,explode=true,name=sortOrder"`
	TeamID         int64                       `pathParam:"style=simple,explode=false,name=teamId"`
}

func (o *ListTeamDocumentsRequest) GetLimit() *int {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListTeamDocumentsRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListTeamDocumentsRequest) GetOrganizationID() *int64 {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *ListTeamDocumentsRequest) GetSearch() *string {
	if o == nil {
		return nil
	}
	return o.Search
}

func (o *ListTeamDocumentsRequest) GetSortField() *ListTeamDocumentsSortField {
	if o == nil {
		return nil
	}
	return o.SortField
}

func (o *ListTeamDocumentsRequest) GetSortOrder() *ListTeamDocumentsSortOrder {
	if o == nil {
		return nil
	}
	return o.SortOrder
}

func (o *ListTeamDocumentsRequest) GetTeamID() int64 {
	if o == nil {
		return 0
	}
	return o.TeamID
}

type ListTeamDocumentsResponse struct {
	BriefDocuments *shared.BriefDocuments
	ContentType    string
	Headers        map[string][]string
	StatusCode     int
	RawResponse    *http.Response
}

func (o *ListTeamDocumentsResponse) GetBriefDocuments() *shared.BriefDocuments {
	if o == nil {
		return nil
	}
	return o.BriefDocuments
}

func (o *ListTeamDocumentsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListTeamDocumentsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *ListTeamDocumentsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListTeamDocumentsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
