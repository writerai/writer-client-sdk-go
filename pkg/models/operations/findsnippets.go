// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/writerai/writer-client-sdk-go/pkg/models/shared"
	"net/http"
)

type FindSnippetsSortField string

const (
	FindSnippetsSortFieldShortcut         FindSnippetsSortField = "shortcut"
	FindSnippetsSortFieldCreationTime     FindSnippetsSortField = "creationTime"
	FindSnippetsSortFieldModificationTime FindSnippetsSortField = "modificationTime"
)

func (e FindSnippetsSortField) ToPointer() *FindSnippetsSortField {
	return &e
}

func (e *FindSnippetsSortField) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shortcut":
		fallthrough
	case "creationTime":
		fallthrough
	case "modificationTime":
		*e = FindSnippetsSortField(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindSnippetsSortField: %v", v)
	}
}

type FindSnippetsSortOrder string

const (
	FindSnippetsSortOrderAsc  FindSnippetsSortOrder = "asc"
	FindSnippetsSortOrderDesc FindSnippetsSortOrder = "desc"
)

func (e FindSnippetsSortOrder) ToPointer() *FindSnippetsSortOrder {
	return &e
}

func (e *FindSnippetsSortOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = FindSnippetsSortOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindSnippetsSortOrder: %v", v)
	}
}

type FindSnippetsRequest struct {
	Limit          *int64                 `queryParam:"style=form,explode=true,name=limit"`
	Offset         *int64                 `queryParam:"style=form,explode=true,name=offset"`
	OrganizationID *int64                 `pathParam:"style=simple,explode=false,name=organizationId"`
	Search         *string                `queryParam:"style=form,explode=true,name=search"`
	Shortcuts      []string               `queryParam:"style=form,explode=true,name=shortcuts"`
	SortField      *FindSnippetsSortField `queryParam:"style=form,explode=true,name=sortField"`
	SortOrder      *FindSnippetsSortOrder `queryParam:"style=form,explode=true,name=sortOrder"`
	Tags           []string               `queryParam:"style=form,explode=true,name=tags"`
	TeamID         int64                  `pathParam:"style=simple,explode=false,name=teamId"`
}

func (o *FindSnippetsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *FindSnippetsRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *FindSnippetsRequest) GetOrganizationID() *int64 {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *FindSnippetsRequest) GetSearch() *string {
	if o == nil {
		return nil
	}
	return o.Search
}

func (o *FindSnippetsRequest) GetShortcuts() []string {
	if o == nil {
		return nil
	}
	return o.Shortcuts
}

func (o *FindSnippetsRequest) GetSortField() *FindSnippetsSortField {
	if o == nil {
		return nil
	}
	return o.SortField
}

func (o *FindSnippetsRequest) GetSortOrder() *FindSnippetsSortOrder {
	if o == nil {
		return nil
	}
	return o.SortOrder
}

func (o *FindSnippetsRequest) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *FindSnippetsRequest) GetTeamID() int64 {
	if o == nil {
		return 0
	}
	return o.TeamID
}

type FindSnippetsResponse struct {
	ContentType                    string
	Headers                        map[string][]string
	PaginatedResultSnippetWithUser *shared.PaginatedResultSnippetWithUser
	StatusCode                     int
	RawResponse                    *http.Response
}

func (o *FindSnippetsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *FindSnippetsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *FindSnippetsResponse) GetPaginatedResultSnippetWithUser() *shared.PaginatedResultSnippetWithUser {
	if o == nil {
		return nil
	}
	return o.PaginatedResultSnippetWithUser
}

func (o *FindSnippetsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *FindSnippetsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
